(=:^' s' (lt' (q' [
  (= ($+' (:^' (:^' s'))
          (lt' (:' s' '4 '0 '1) (ev' (:' s' '5 '0 '2)) ())))

  (=. (=:^' (:>' (:^' (:|' (lu' (:^' s') (:' s' '7 '0 '1)))))
            (ev' (:' s' '4 '0 '2))))

  (dl ($-' (:'       (lu' (:^' s') (:' s' '5 '0 '1)) '-2)
           (:^' (:|' (lu' (:^' s') (:' s' '6 '0 '1))))))

  (do (sx'
    (=:^' s' (lt' (st') (:^' s')))
    (ev' (lt' sx' (:>' (:' s' '6 '0))))
    (=:^' s' (:>' (:^' s')))
  ))

  (?? (?' (ev' (:' s' '4 '0 '1)) (sx'
    (ev' (:' s' '5 '0 '2))
    (=:>' s' (:@' s' '5))
  )))

  (testXDf (?' (lu' (:^' s') (q' x))
    (pr' (q' ('54 'a)))
    (pr' (q' ('46 'a)))
  ))

  (testRecur (?' x (sx'
    (pr' x)
    (=. x (:>' x))
    (testRecur)
  )))

  (test?? (?? x (sx'
    (pr' x)
    (=. x (:>' x))
  )))
]) (:^' s') ()))

#' test code '#

#' (= answer (q' ('34 '32 'a)))
(pr' answer)
(=. answer (q' ('30 '31 'a)))
(pr' answer) '#

#' (= x '1)
(testXDf)
(dl x)
(testXDf) '#

#' (do
  (= x '1)
  (testXDf)
)
(testXDf)
(do (testXDf)) '#

#' (= x (q' ('30 '31 '32 'a)))
(testRecur)
(=. x (q' ('30 '31 '32 'a)))
(test??) '#
